plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/cucumber.accesswidener")
}

repositories {
	maven {
		url = 'https://maven.blamejared.com'
		name = 'BlameJared Maven'
	}

	maven {
		name = "Fuzs Mod Resources"
		url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
	}

	maven { url = "https://mvn.devos.one/releases/" }

	maven { url 'https://jitpack.io' }

	maven {
		name = "Shedaniel"
		url = "https://maven.shedaniel.me/"
	}

	maven {
		name = "vram"
		url = "https://maven.vram.io/"
	}
	maven { url "https://maven.jamieswhiteshirt.com/libs-release" }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//Almost Unified
	modApi("com.almostreliable.mods:almostunified-fabric:${project.almostunified_version}")

	include modApi("teamreborn:energy:${project.energy_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	implementation "com.electronwill.night-config:core:${project.nightconfig_version}"
	implementation "com.electronwill.night-config:toml:${project.nightconfig_version}"
	modApi "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${project.forgeconfigapiport_version}"

	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:base:${project.portinglib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:common:${project.portinglib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:core:${project.portinglib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:extensions:${project.portinglib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:accessors:${project.portinglib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:attributes:${project.portinglib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:entity:${project.portinglib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:fluids:${project.portinglib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:lazy_registration:${project.portinglib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:mixin_extensions:${project.portinglib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:tags:${project.portinglib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:transfer:${project.portinglib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:utility:${project.portinglib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:tool_actions:${project.portinglib_version}"))
}

base {
	archivesName = project.archives_base_name+"-"+project.minecraft_version
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		maven (MavenPublication) {
			groupId = group
			artifactId = project.name
			version = mod_version
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
		maven {
			name 'kirbosoftware'
			credentials(PasswordCredentials)
			url 'https://maven.kirbosoftware.com/snapshots'
		}
	}
}

configurations.all {
	resolutionStrategy {
		force("net.fabricmc:fabric-loader:$loader_version")
	}
}
